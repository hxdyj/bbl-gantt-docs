import{_ as a,c as t,o as i,ag as r}from"./chunks/framework.UtM2fnOC.js";const p=JSON.parse('{"title":"Time 类","description":"","frontmatter":{"layout":"doc","footer":false},"headers":[],"relativePath":"api/time-class.md","filePath":"zh/api/time-class.md","lastUpdated":1756979819000}'),o={name:"api/time-class.md"};function n(l,e,s,h,c,d){return i(),t("div",null,[...e[0]||(e[0]=[r('<h1 id="time-类" tabindex="-1">Time 类 <a class="header-anchor" href="#time-类" aria-label="Permalink to &quot;Time 类&quot;">​</a></h1><p>时间相关的类，计算时间轴的刻度，根据 x 坐标计算时间，根据时间计算 x 坐标等</p><h2 id="构造函数" tabindex="-1">构造函数 <a class="header-anchor" href="#构造函数" aria-label="Permalink to &quot;构造函数&quot;">​</a></h2><h3 id="constructor" tabindex="-1">constructor <a class="header-anchor" href="#constructor" aria-label="Permalink to &quot;constructor&quot;">​</a></h3><p>参数：<code>(gantt: Gantt)</code></p><p>构造函数，传入 Gantt 实例</p><h2 id="实例属性" tabindex="-1">实例属性 <a class="header-anchor" href="#实例属性" aria-label="Permalink to &quot;实例属性&quot;">​</a></h2><h3 id="gantt" tabindex="-1">gantt <a class="header-anchor" href="#gantt" aria-label="Permalink to &quot;gantt&quot;">​</a></h3><p>Gantt 实例</p><h3 id="ticks" tabindex="-1">ticks <a class="header-anchor" href="#ticks" aria-label="Permalink to &quot;ticks&quot;">​</a></h3><p>用户划分的 column 算出的 ticks 数量</p><h3 id="timeticks" tabindex="-1">timeTicks <a class="header-anchor" href="#timeticks" aria-label="Permalink to &quot;timeTicks&quot;">​</a></h3><p>用户划分的 column 算出的 ticks 数量</p><h3 id="steptime" tabindex="-1">stepTime <a class="header-anchor" href="#steptime" aria-label="Permalink to &quot;stepTime&quot;">​</a></h3><p>将用户划分的 column timeMetric 统一转换成毫秒数的步长</p><h3 id="fixunit" tabindex="-1">fixUnit <a class="header-anchor" href="#fixunit" aria-label="Permalink to &quot;fixUnit&quot;">​</a></h3><p>根据用户划分的 column timeMetric 找到合适的 dayjs 添加或者减少时候的单位</p><h3 id="fixunitsteptime" tabindex="-1">fixUnitStepTime <a class="header-anchor" href="#fixunitsteptime" aria-label="Permalink to &quot;fixUnitStepTime&quot;">​</a></h3><p>fixUnit 转换成毫秒数</p><h3 id="starttime" tabindex="-1">startTime <a class="header-anchor" href="#starttime" aria-label="Permalink to &quot;startTime&quot;">​</a></h3><p>视图开始时间</p><h3 id="endtime" tabindex="-1">endTime <a class="header-anchor" href="#endtime" aria-label="Permalink to &quot;endTime&quot;">​</a></h3><p>视图结束时间，和 gantt 实例的 endTime 不同点在于，视图有时候可能大，gantt 内容填充不满，所以视图的 endTime 可能比 gantt 的 endTime 大</p><h2 id="方法" tabindex="-1">方法 <a class="header-anchor" href="#方法" aria-label="Permalink to &quot;方法&quot;">​</a></h2><h3 id="time2x" tabindex="-1">time2x <a class="header-anchor" href="#time2x" aria-label="Permalink to &quot;time2x&quot;">​</a></h3><p>参数：<code>(time: Dayjs, startTime?: Dayjs): number</code></p><p>根据时间和开始时间计算 x 坐标</p><h3 id="x2time" tabindex="-1">x2time <a class="header-anchor" href="#x2time" aria-label="Permalink to &quot;x2time&quot;">​</a></h3><p>参数：<code>(x: number, startTime?: Dayjs): Dayjs</code></p><p>根据 x 坐标和开始时间计算时间</p><h3 id="containerscrolllefttime" tabindex="-1">containerScrollLeftTime <a class="header-anchor" href="#containerscrolllefttime" aria-label="Permalink to &quot;containerScrollLeftTime&quot;">​</a></h3><p>参数：<code>(): Dayjs</code></p><p>计算当前 container 左侧滚动条的位置对应的时间</p><h3 id="stagewidthtime" tabindex="-1">stageWidthTime <a class="header-anchor" href="#stagewidthtime" aria-label="Permalink to &quot;stageWidthTime&quot;">​</a></h3><p>参数：<code>(): Dayjs</code></p><p>计算 stage 宽度对应的时间</p><h3 id="length2milliseconds" tabindex="-1">length2milliseconds <a class="header-anchor" href="#length2milliseconds" aria-label="Permalink to &quot;length2milliseconds&quot;">​</a></h3><p>参数：<code>(length: number): number</code></p><p>根据长度计算毫秒数</p><h3 id="getwidthbytwotime" tabindex="-1">getWidthByTwoTime <a class="header-anchor" href="#getwidthbytwotime" aria-label="Permalink to &quot;getWidthByTwoTime&quot;">​</a></h3><p>参数：<code>(time1: Dayjs, time2: Dayjs): number</code></p><p>根据两个时间计算出时间之间的宽度</p>',42)])])}const u=a(o,[["render",n]]);export{p as __pageData,u as default};
