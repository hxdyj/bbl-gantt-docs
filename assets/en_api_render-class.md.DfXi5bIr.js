import{_ as a,c as t,o as r,ag as n}from"./chunks/framework.UtM2fnOC.js";const u=JSON.parse('{"title":"Render Class","description":"","frontmatter":{"layout":"doc","footer":false},"headers":[],"relativePath":"en/api/render-class.md","filePath":"en/api/render-class.md","lastUpdated":1756979819000}'),s={name:"en/api/render-class.md"};function o(i,e,h,d,c,l){return r(),t("div",null,[...e[0]||(e[0]=[n('<h1 id="render-class" tabindex="-1">Render Class <a class="header-anchor" href="#render-class" aria-label="Permalink to &quot;Render Class&quot;">​</a></h1><p>Class for rendering the Gantt instance, which is responsible for rendering the entire Gantt instance, rendering is divided into four parts: header, ticks, rows, events.</p><h2 id="constructor" tabindex="-1">Constructor <a class="header-anchor" href="#constructor" aria-label="Permalink to &quot;Constructor&quot;">​</a></h2><h3 id="constructor-1" tabindex="-1">constructor <a class="header-anchor" href="#constructor-1" aria-label="Permalink to &quot;constructor&quot;">​</a></h3><p>Parameters: <code>(gantt: Gantt)</code></p><p>Constructor, which takes the Gantt instance as a parameter.</p><h2 id="instance-properties" tabindex="-1">Instance Properties <a class="header-anchor" href="#instance-properties" aria-label="Permalink to &quot;Instance Properties&quot;">​</a></h2><h3 id="gantt" tabindex="-1">gantt <a class="header-anchor" href="#gantt" aria-label="Permalink to &quot;gantt&quot;">​</a></h3><p>Gantt instance</p><h3 id="header" tabindex="-1">header <a class="header-anchor" href="#header" aria-label="Permalink to &quot;header&quot;">​</a></h3><p>HeaderRender instance, which is responsible for rendering the header part.</p><h3 id="ticks" tabindex="-1">ticks <a class="header-anchor" href="#ticks" aria-label="Permalink to &quot;ticks&quot;">​</a></h3><p>TicksRender instance, which is responsible for rendering the ticks part.</p><h3 id="rows" tabindex="-1">rows <a class="header-anchor" href="#rows" aria-label="Permalink to &quot;rows&quot;">​</a></h3><p>RowsRender instance, which is responsible for rendering the rows part.</p><h3 id="events" tabindex="-1">events <a class="header-anchor" href="#events" aria-label="Permalink to &quot;events&quot;">​</a></h3><p>EventsRender instance, which is responsible for rendering the events part.</p><h2 id="methods" tabindex="-1">Methods <a class="header-anchor" href="#methods" aria-label="Permalink to &quot;Methods&quot;">​</a></h2><h3 id="render" tabindex="-1">render <a class="header-anchor" href="#render" aria-label="Permalink to &quot;render&quot;">​</a></h3><p>Renders the entire Gantt instance.</p><h3 id="caculateganttbox" tabindex="-1">caculateGanttBox <a class="header-anchor" href="#caculateganttbox" aria-label="Permalink to &quot;caculateGanttBox&quot;">​</a></h3><p>Calculates the width and height of the entire Gantt instance svg element.</p><h3 id="getybyindex" tabindex="-1">getYbyIndex <a class="header-anchor" href="#getybyindex" aria-label="Permalink to &quot;getYbyIndex&quot;">​</a></h3><p>Calculates the y coordinate of the row based on the index.</p>',24)])])}const b=a(s,[["render",o]]);export{u as __pageData,b as default};
