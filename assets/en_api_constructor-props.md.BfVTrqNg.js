import{_ as e,c as t,o as n,ag as i}from"./chunks/framework.UtM2fnOC.js";const u=JSON.parse('{"title":"","description":"","frontmatter":{"layout":"doc","footer":false},"headers":[],"relativePath":"en/api/constructor-props.md","filePath":"en/api/constructor-props.md","lastUpdated":1756979819000}'),s={name:"en/api/constructor-props.md"};function r(o,a,h,l,c,p){return n(),t("div",null,[...a[0]||(a[0]=[i(`<h2 id="instance-properties" tabindex="-1">Instance Properties <a class="header-anchor" href="#instance-properties" aria-label="Permalink to &quot;Instance Properties&quot;">​</a></h2><h3 id="id" tabindex="-1">id <a class="header-anchor" href="#id" aria-label="Permalink to &quot;id&quot;">​</a></h3><p>The unique identifier of the current instance.</p><h3 id="parentcontainer" tabindex="-1">parentContainer <a class="header-anchor" href="#parentcontainer" aria-label="Permalink to &quot;parentContainer&quot;">​</a></h3><p>The element specified in the options of the current instance.</p><h3 id="container" tabindex="-1">container <a class="header-anchor" href="#container" aria-label="Permalink to &quot;container&quot;">​</a></h3><p>Current instance container element, used to handle scroll-related containers, under parentContainer</p><h3 id="body" tabindex="-1">body <a class="header-anchor" href="#body" aria-label="Permalink to &quot;body&quot;">​</a></h3><p>Current instance svg canvas wrapper container, under container</p><h3 id="stage" tabindex="-1">stage <a class="header-anchor" href="#stage" aria-label="Permalink to &quot;stage&quot;">​</a></h3><p>Current instance&#39;s SVG canvas object.</p><h3 id="parentcontainerrectinfo" tabindex="-1">parentContainerRectInfo <a class="header-anchor" href="#parentcontainerrectinfo" aria-label="Permalink to &quot;parentContainerRectInfo&quot;">​</a></h3><p>The rectangular information of the parentContainer element of the current instance.</p><h3 id="containerrectinfo" tabindex="-1">containerRectInfo <a class="header-anchor" href="#containerrectinfo" aria-label="Permalink to &quot;containerRectInfo&quot;">​</a></h3><p>The rectangular information of the container element of the current instance.</p><h3 id="data" tabindex="-1">data <a class="header-anchor" href="#data" aria-label="Permalink to &quot;data&quot;">​</a></h3><p>Current instance&#39;s original data.</p><h3 id="list" tabindex="-1">list <a class="header-anchor" href="#list" aria-label="Permalink to &quot;list&quot;">​</a></h3><p>Current instance&#39;s processed data, containing the start and end time of each task, color, etc.</p><h3 id="options" tabindex="-1">options <a class="header-anchor" href="#options" aria-label="Permalink to &quot;options&quot;">​</a></h3><p>Current instance&#39;s configuration item.</p><h3 id="status" tabindex="-1">status <a class="header-anchor" href="#status" aria-label="Permalink to &quot;status&quot;">​</a></h3><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> type</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Status</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">	eventMoving</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> boolean</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> // event is moving</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">	eventResizing</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> boolean</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> // event is resizing</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">	addEventIteming</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> boolean</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> // adding event item</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>Current instance status.</p><h3 id="eventbus" tabindex="-1">eventBus <a class="header-anchor" href="#eventbus" aria-label="Permalink to &quot;eventBus&quot;">​</a></h3><p>Current instance&#39;s event bus object.</p><h3 id="view" tabindex="-1">view <a class="header-anchor" href="#view" aria-label="Permalink to &quot;view&quot;">​</a></h3><p>Current instance&#39;s <a href="/en/api/view-class">view object</a>.</p><h3 id="time" tabindex="-1">time <a class="header-anchor" href="#time" aria-label="Permalink to &quot;time&quot;">​</a></h3><p>Current instance&#39;s <a href="/en/api/time-class">time object</a>.</p><h3 id="render" tabindex="-1">render <a class="header-anchor" href="#render" aria-label="Permalink to &quot;render&quot;">​</a></h3><p>Current instance&#39;s <a href="/en/api/view-class">rendering object</a>.</p><h3 id="mintime" tabindex="-1">minTime <a class="header-anchor" href="#mintime" aria-label="Permalink to &quot;minTime&quot;">​</a></h3><p>The minimum time calculated based on the data of the current instance, in Dayjs object format.</p><h3 id="maxtime" tabindex="-1">maxTime <a class="header-anchor" href="#maxtime" aria-label="Permalink to &quot;maxTime&quot;">​</a></h3><p>The maximum time calculated based on the data of the current instance, in Dayjs object format.</p><h3 id="createtime" tabindex="-1">createTime <a class="header-anchor" href="#createtime" aria-label="Permalink to &quot;createTime&quot;">​</a></h3><p>The creation time of the current instance.</p>`,38)])])}const k=e(s,[["render",r]]);export{u as __pageData,k as default};
